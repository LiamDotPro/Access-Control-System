package SetupForms;

import AccessSystem.Architecture.Building;
import AccessSystem.Architecture.Campus;
import AccessSystem.Architecture.Floor;
import AccessSystem.Architecture.Room;
import AccessSystem.Architecture.University;
import AccessSystem.Controller;
import AccessSystem.Enumerations.RoomType;
import AccessSystem.Logging.AccessLogger;
import AccessSystem.Logging.EmergencyLogger;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author li
 */
public class UniversitySetup extends javax.swing.JFrame {

    private University university;
    private boolean uniNameSet = false;
    private DefaultListModel CampusListModel;
    private DefaultListModel BuildingModel;
    private DefaultListModel floorModel;
    private DefaultListModel roomModel;
    private DefaultListModel funcList;
    private List<Controller> Controller;
    private AccessLogger AccessLogger;
    private EmergencyLogger EmergencyLogger;
    private Controller tempController;

    /**
     * Creates new form UniversitySetup. This allows for the creation of a
     * university which is then added to the list of controllers.
     *
     * @param listOfController list of all controllers within the system.
     */
    public UniversitySetup(List<Controller> listOfController) {

        this.Controller = listOfController;

        CampusListModel = new DefaultListModel();
        BuildingModel = new DefaultListModel();
        floorModel = new DefaultListModel();

        roomModel = new DefaultListModel();
        funcList = new DefaultListModel();

        initComponents();

        Dimension d = new Dimension();

        d.height = 800;
        d.width = 600;

        this.setSize(d);

        //Campus Controls
        this.campusAddBtn.setEnabled(false);
        this.CampusName.setEnabled(false);

        //Building Controls
        this.buildingName.setEnabled(false);
        this.AddBuildingBtn.setEnabled(false);

        //floor Controls
        this.floorTxt.setEnabled(false);
        this.addFloorBtn.setEnabled(false);

        //room
        this.roomPanel.setEnabled(true);

        //Setup Func Selector
        for (RoomType p : RoomType.values()) {
            this.funcSelector.addItem(p.toString());
        }

    }

    private UniversitySetup() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Above0Save = new javax.swing.JDialog();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        uniNameTxt = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CampusList = new javax.swing.JList();
        CampusName = new javax.swing.JTextField();
        campusAddBtn = new javax.swing.JButton();
        uniNameInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buildingName = new javax.swing.JTextField();
        AddBuildingBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        buildingList = new javax.swing.JList();
        selectedCampuslbl = new javax.swing.JLabel();
        setUniName = new javax.swing.JButton();
        editUniName = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        floorTxt = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        floorList = new javax.swing.JList();
        addFloorBtn = new javax.swing.JButton();
        selectedBuildingTxt = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        roomName = new javax.swing.JTextField();
        roomPanel = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        selectedFloor = new javax.swing.JLabel();
        addRoomBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        roomNumb = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        roomFunc = new javax.swing.JList<>();
        funcSelector = new javax.swing.JComboBox<>();
        addToFunc = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        Save = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        Above0Save.setResizable(false);
        Above0Save.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                Above0SaveWindowOpened(evt);
            }
        });

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("You Must have more than zero");

        javax.swing.GroupLayout Above0SaveLayout = new javax.swing.GroupLayout(Above0Save.getContentPane());
        Above0Save.getContentPane().setLayout(Above0SaveLayout);
        Above0SaveLayout.setHorizontalGroup(
            Above0SaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Above0SaveLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(85, 85, 85))
            .addGroup(Above0SaveLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        Above0SaveLayout.setVerticalGroup(
            Above0SaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Above0SaveLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(20, 20, 20))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        uniNameTxt.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        uniNameTxt.setText("University Name:");
        getContentPane().add(uniNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("Campus:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        CampusList.setModel(CampusListModel);
        CampusList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CampusListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CampusList);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 188, 83));
        getContentPane().add(CampusName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 170, -1));

        campusAddBtn.setText("Add");
        campusAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campusAddBtnActionPerformed(evt);
            }
        });
        getContentPane().add(campusAddBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 170, -1));
        getContentPane().add(uniNameInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 320, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Building:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));
        getContentPane().add(buildingName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 162, -1));

        AddBuildingBtn.setText("Add");
        AddBuildingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBuildingBtnActionPerformed(evt);
            }
        });
        getContentPane().add(AddBuildingBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 162, -1));

        buildingList.setModel(BuildingModel);
        buildingList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buildingListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(buildingList);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, 190, 84));

        selectedCampuslbl.setText("Selected Campus:");
        getContentPane().add(selectedCampuslbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, -1, -1));

        setUniName.setText("Set Name");
        setUniName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setUniNameActionPerformed(evt);
            }
        });
        getContentPane().add(setUniName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 136, -1));

        editUniName.setText("Edit Name");
        editUniName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUniNameActionPerformed(evt);
            }
        });
        getContentPane().add(editUniName, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 175, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Floor:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, -1, -1));
        getContentPane().add(floorTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 320, 160, -1));

        floorList.setModel(floorModel);
        floorList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                floorListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(floorList);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 324, 190, 90));

        addFloorBtn.setText("Add");
        addFloorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFloorBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addFloorBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 162, -1));

        selectedBuildingTxt.setText("Selected Building:");
        getContentPane().add(selectedBuildingTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Room:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        roomName.setEnabled(false);
        getContentPane().add(roomName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 450, 162, -1));

        roomPanel.setEnabled(false);

        jList1.setModel(roomModel);
        roomPanel.setViewportView(jList1);

        getContentPane().add(roomPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 450, 190, 250));

        selectedFloor.setText("Selected Floor:");
        getContentPane().add(selectedFloor, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, -1, -1));

        addRoomBtn.setText("Add");
        addRoomBtn.setEnabled(false);
        addRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addRoomBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 640, 230, -1));

        jLabel7.setText("Room Number:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, -1, -1));

        roomNumb.setEnabled(false);
        roomNumb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNumbActionPerformed(evt);
            }
        });
        getContentPane().add(roomNumb, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 480, 130, -1));

        jScrollPane5.setEnabled(false);

        roomFunc.setModel(funcList);
        roomFunc.setEnabled(false);
        jScrollPane5.setViewportView(roomFunc);

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 530, 110, 100));

        funcSelector.setEnabled(false);
        getContentPane().add(funcSelector, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 100, -1));

        addToFunc.setText("Add");
        addToFunc.setEnabled(false);
        addToFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToFuncActionPerformed(evt);
            }
        });
        getContentPane().add(addToFunc, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 560, 100, -1));

        jLabel8.setText("Room Functionality:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 510, -1, -1));

        jMenu1.setText("Start");
        jMenu1.setName("StartMenuBtn"); // NOI18N

        jMenuItem1.setText("Main Menu");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        jMenu1.add(Save);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Made by Liam Read");
        jMenu3.setEnabled(false);
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed

        tempController.setUniversities(university);

        this.Controller.add(tempController);

        this.dispose();

    }//GEN-LAST:event_SaveActionPerformed

    private void campusAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campusAddBtnActionPerformed

        String tempCampusName = this.CampusName.getText();
        if (!"".equals(tempCampusName)) {
            this.CampusName.setText("");

            try {
                university.getCampusList().add(new Campus(tempCampusName, this.AccessLogger, this.EmergencyLogger));
                this.CampusListModel.addElement(tempCampusName);

            } catch (NullPointerException e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_campusAddBtnActionPerformed

    private void setUniNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setUniNameActionPerformed

        if (uniNameSet == false) {

            this.university = new University(this.uniNameInput.getText());

            tempController = new Controller(this.university.getUniversityName());

            this.AccessLogger = new AccessLogger(university.getUniversityName(), tempController);
            this.EmergencyLogger = new EmergencyLogger(university.getUniversityName(), tempController);

            tempController.setAccessLogger(AccessLogger);
            tempController.setEmergencyLogger(EmergencyLogger);
            university.setAccessLogger(AccessLogger);
            university.setEmergencyLogger(EmergencyLogger);

            this.editUniName.setEnabled(true);
            this.setUniName.setEnabled(false);
            this.uniNameInput.setEnabled(false);

            this.uniNameSet = true;

            this.campusAddBtn.setEnabled(true);
            this.CampusName.setEnabled(true);
        } else {
            this.university.setUniversityName(this.uniNameInput.getText());

            this.editUniName.setEnabled(true);
            this.setUniName.setEnabled(false);
            this.uniNameInput.setEnabled(false);
        }
    }//GEN-LAST:event_setUniNameActionPerformed

    private void editUniNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUniNameActionPerformed
        this.setUniName.setEnabled(true);
        this.uniNameInput.setEnabled(true);
        this.editUniName.setEnabled(false);
    }//GEN-LAST:event_editUniNameActionPerformed

    private void Above0SaveWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_Above0SaveWindowOpened
        Dimension q = new Dimension();

        q.width = 234;
        q.height = 120;

        this.Above0Save.setSize(q);

    }//GEN-LAST:event_Above0SaveWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.Above0Save.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CampusListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CampusListMouseClicked

        Integer Index = this.CampusList.getSelectedIndex();

        this.selectedCampuslbl.setText("Selected Campus: " + CampusList.getSelectedValue());

        //Load buildings into model
        this.BuildingModel.clear();
        for (Building b : university.getCampusList().get(Index).getBuilding()) {
            BuildingModel.addElement(b.getBuildingName());
        }
        this.buildingName.setEnabled(true);
        this.AddBuildingBtn.setEnabled(true);

        //clear floor list
        this.floorModel.clear();

        //clear room list
        this.roomModel.clear();


    }//GEN-LAST:event_CampusListMouseClicked

    private void AddBuildingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBuildingBtnActionPerformed

        Integer Index = this.CampusList.getSelectedIndex();
        try {
            if (!"".equals(buildingName.getText())) {
                String tempBuildingName = this.buildingName.getText();
                university.getCampusList().get(Index).addBuilding(new Building(tempBuildingName, Index, university.getCampusList().get(Index), this.AccessLogger, this.EmergencyLogger));
                this.BuildingModel.addElement(this.buildingName.getText());
                this.buildingName.setText("");
            }
        } catch (NullPointerException e) {
            System.err.println(e);
        }

    }//GEN-LAST:event_AddBuildingBtnActionPerformed

    private void buildingListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buildingListMouseClicked

        //building index number
        Integer indexC = this.CampusList.getSelectedIndex();
        Integer indexB = this.buildingList.getSelectedIndex();

        //show of currently selected index
        this.selectedBuildingTxt.setText("Selected Building: " + this.buildingList.getSelectedValue().toString());

        if (university.getCampusList().get(indexC).getBuilding().get(indexB).getFloorsInBuilding().size() == 0) {
            //floor model build
            this.floorModel.clear();
            this.roomModel.clear();
            this.floorTxt.setEnabled(true);
            this.addFloorBtn.setEnabled(true);
        } else {
            //load floor model
            this.floorModel.clear();
            this.roomModel.clear();
            for (Floor f : university.getCampusList().get(indexC).getBuilding().get(indexB).getFloorsInBuilding()) {
                floorModel.addElement(f.getFloorIdentifer());
            }
            this.floorTxt.setEnabled(true);
            this.addFloorBtn.setEnabled(true);
        }

    }//GEN-LAST:event_buildingListMouseClicked

    private void roomNumbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNumbActionPerformed

    }//GEN-LAST:event_roomNumbActionPerformed

    private void addFloorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFloorBtnActionPerformed
        Integer indexC = this.CampusList.getSelectedIndex();
        Integer indexB = this.buildingList.getSelectedIndex();
        try {
            if (!"".equals(this.floorTxt.getText())) {
                String tempFloorName = this.floorTxt.getText();
                String buildingCode = university.getCampusList().get(indexC).getBuilding().get(indexB).getBuildingCode();
                Floor floor = new Floor(tempFloorName, buildingCode, university.getCampusList().get(indexC).getBuilding().get(indexB), this.AccessLogger, this.EmergencyLogger);
                university.getCampusList().get(indexC).getBuilding().get(indexB).addFloorToBuilding(floor);
                this.floorModel.addElement(this.floorTxt.getText());
                this.floorTxt.setText("");
            }
        } catch (NullPointerException e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_addFloorBtnActionPerformed

    private void floorListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_floorListMouseClicked
        this.selectedFloor.setText("Selected Floor: " + this.floorList.getSelectedValue().toString());

        //indexing
        Integer indexC = this.CampusList.getSelectedIndex();
        Integer indexB = this.buildingList.getSelectedIndex();
        Integer indexF = this.floorList.getSelectedIndex();

        //show of currently selected index
        this.selectedBuildingTxt.setText("Selected Building: " + this.buildingList.getSelectedValue().toString());

        if (university.getCampusList().get(indexC).getBuilding().get(indexB).getFloorsInBuilding().get(indexF).getRoomsOnFloor().size() == 0) {
            //floor model build
            this.roomModel.clear();
            this.roomName.setEnabled(true);
            this.roomNumb.setEnabled(true);
            this.roomFunc.setEnabled(true);
            this.funcSelector.setEnabled(true);
            this.addToFunc.setEnabled(true);
            this.addRoomBtn.setEnabled(true);
        } else {
            //load room model
            this.roomModel.clear();
            for (Room r : university.getCampusList().get(indexC).getBuilding().get(indexB).getFloorsInBuilding().get(indexF).getRoomsOnFloor()) {
                roomModel.addElement(r.getRoomName());
            }
            this.roomName.setEnabled(true);
            this.roomNumb.setEnabled(true);
            this.roomFunc.setEnabled(true);
            this.funcSelector.setEnabled(true);
            this.addToFunc.setEnabled(true);

            this.addRoomBtn.setEnabled(true);
        }

    }//GEN-LAST:event_floorListMouseClicked

    private void addToFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToFuncActionPerformed

        Integer funcIndex = funcSelector.getSelectedIndex();

        ArrayList elements = new ArrayList<>();

        elements.addAll(Arrays.asList(RoomType.values()));

        if (!funcList.contains(elements.get(funcIndex))) {
            funcList.addElement(elements.get(funcIndex));
        }


    }//GEN-LAST:event_addToFuncActionPerformed

    private void addRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomBtnActionPerformed
        //indexing
        Integer indexC = this.CampusList.getSelectedIndex();
        Integer indexB = this.buildingList.getSelectedIndex();
        Integer indexF = this.floorList.getSelectedIndex();
        Integer roomNumber = null;

        if (funcList.size() != 0) {

            try {
                roomNumber = Integer.parseInt(this.roomNumb.getText());

                String roomName = this.roomName.getText();
                String buildingCode = university.getCampusList().get(indexC).getBuilding().get(indexB).getBuildingCode();
                String floorName = university.getCampusList().get(indexC).getBuilding().get(indexB).getFloorsInBuilding().get(indexF).getFloorIdentifer();
                List<RoomType> roomRoles = new ArrayList<>();
                ArrayList elements = new ArrayList<>();

                elements.addAll(Arrays.asList(RoomType.values()));

                for (Object s : funcList.toArray()) {
                    if (elements.contains(s)) {

                        switch (s.toString()) {
                            case "LECTUREHALL":
                                roomRoles.add(RoomType.LECTUREHALL);
                                break;
                            case "STUDENTLAB":
                                roomRoles.add(RoomType.STUDENTLAB);
                                break;
                            case "RESEARCHLAB":
                                roomRoles.add(RoomType.RESEARCHLAB);
                                break;
                            case "STAFFROOM":
                                roomRoles.add(RoomType.STAFFROOM);
                                break;
                            case "SECUREROOM":
                                roomRoles.add(RoomType.SECUREROOM);
                                break;
                        }
                    }
                }

                Floor floor = university.getCampusList().get(indexC).getBuilding().get(indexB).getFloorsInBuilding().get(indexF);
                floor.addRoom(new Room(roomNumber, roomName, floorName, roomRoles, buildingCode, floor, this.AccessLogger, this.EmergencyLogger));

                this.roomName.setText("");
                this.roomNumb.setText("");
                this.funcList.clear();

                this.roomModel.addElement(roomName);

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "You have entered an invalid Room Number", "Incorrect Formatting", JOptionPane.WARNING_MESSAGE);
            }

        }

    }//GEN-LAST:event_addRoomBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UniversitySetup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UniversitySetup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UniversitySetup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UniversitySetup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UniversitySetup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Above0Save;
    private javax.swing.JButton AddBuildingBtn;
    private javax.swing.JList CampusList;
    private javax.swing.JTextField CampusName;
    private javax.swing.JMenuItem Save;
    private javax.swing.JButton addFloorBtn;
    private javax.swing.JButton addRoomBtn;
    private javax.swing.JButton addToFunc;
    private javax.swing.JList buildingList;
    private javax.swing.JTextField buildingName;
    private javax.swing.JButton campusAddBtn;
    private javax.swing.JButton editUniName;
    private javax.swing.JList floorList;
    private javax.swing.JTextField floorTxt;
    private javax.swing.JComboBox<String> funcSelector;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<String> roomFunc;
    private javax.swing.JTextField roomName;
    private javax.swing.JTextField roomNumb;
    private javax.swing.JScrollPane roomPanel;
    private javax.swing.JLabel selectedBuildingTxt;
    private javax.swing.JLabel selectedCampuslbl;
    private javax.swing.JLabel selectedFloor;
    private javax.swing.JButton setUniName;
    private javax.swing.JTextField uniNameInput;
    private javax.swing.JLabel uniNameTxt;
    // End of variables declaration//GEN-END:variables
}
