/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SetupForms;

import AccessSystem.Controller;
import AccessSystem.People.BaseInformation.Person;
import AccessSystem.PersonRegister;
import SystemOverview.SystemOverview;
import java.awt.Dimension;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * The main menu allows a user to select and load a university into the
 * systermOverView, create university's, add people to university's, Delete
 * university's from the menu and get users details.
 *
 * @author Liam Read
 */
public final class MainMenu extends javax.swing.JFrame {

    /**
     * Attributes: list of all controllers, model for university list and model for list of people on the person register.
     */
    public List<Controller> uniController;
    private final DefaultListModel listModel;
    private final DefaultListModel personModel;

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        listModel = new DefaultListModel();
        personModel = new DefaultListModel();
        this.uniController = new ArrayList<>();
        updateUniList();
        initComponents();
        constrainListAttributes();

    }

    private void constrainListAttributes() {
        Dimension ListSize1 = new Dimension();
        ListSize1.height = 131;
        ListSize1.width = 259;
        this.universityList.setFixedCellWidth(ListSize1.width);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        listContainer = new javax.swing.JScrollPane();
        universityList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        addUserBtn = new javax.swing.JButton();
        deleteUserBtn = new javax.swing.JButton();
        getCreds = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuSaveBtn = new javax.swing.JMenuItem();
        menuLoadBtn = new javax.swing.JMenuItem();
        loadUniversity = new javax.swing.JMenuItem();
        menuCloseBtn = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 680));
        setResizable(false);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        listContainer.setMinimumSize(new java.awt.Dimension(259, 131));

        universityList.setModel(listModel);
        universityList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        universityList.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                universityListComponentAdded(evt);
            }
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                universityListComponentRemoved(evt);
            }
        });
        universityList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                universityListMouseClicked(evt);
            }
        });
        universityList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                universityListValueChanged(evt);
            }
        });
        listContainer.setViewportView(universityList);
        universityList.getAccessibleContext().setAccessibleName("mainMenuUniList");
        universityList.getAccessibleContext().setAccessibleDescription("");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("University Access System");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Universites");

        jButton1.setText("Load University Schema");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete University Schema");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        userList.setModel(personModel);
        userList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(userList);

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setText("Registered Users");

        jLabel10.setText("SOFT252 - Liam Read (10453561)");

        addUserBtn.setText("Add User");
        addUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserBtnActionPerformed(evt);
            }
        });

        deleteUserBtn.setText("Delete User");
        deleteUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserBtnActionPerformed(evt);
            }
        });

        getCreds.setText("Get User Credentials");
        getCreds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getCredsActionPerformed(evt);
            }
        });

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        jMenu1.setText("Start");

        menuSaveBtn.setText("Save");
        menuSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveBtnActionPerformed(evt);
            }
        });
        jMenu1.add(menuSaveBtn);
        menuSaveBtn.getAccessibleContext().setAccessibleName("menuBarClose");
        menuSaveBtn.getAccessibleContext().setAccessibleDescription("");

        menuLoadBtn.setText("Load Entire System");
        menuLoadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLoadBtnActionPerformed(evt);
            }
        });
        jMenu1.add(menuLoadBtn);

        loadUniversity.setText("Load University");
        loadUniversity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadUniversityActionPerformed(evt);
            }
        });
        jMenu1.add(loadUniversity);

        menuCloseBtn.setText("Close");
        menuCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCloseBtnActionPerformed(evt);
            }
        });
        jMenu1.add(menuCloseBtn);

        jMenuBar1.add(jMenu1);
        jMenu1.getAccessibleContext().setAccessibleName("menuBarStart");

        jMenu2.setText("Create");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem2.setText("University");
        jMenuItem2.setToolTipText("");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Made by Liam Read");
        jMenu3.setEnabled(false);
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(listContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(getCreds, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteUserBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(addUserBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(refreshBtn)))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(refreshBtn))
                .addGap(3, 3, 3)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(listContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(6, 6, 6)
                        .addComponent(deleteBtn))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addUserBtn)
                .addGap(6, 6, 6)
                .addComponent(getCreds)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteUserBtn)
                .addContainerGap())
        );

        jButton1.getAccessibleContext().setAccessibleName("loadUniversitySchema");
        addUserBtn.getAccessibleContext().setAccessibleName("mainBtnAddUser");
        deleteUserBtn.getAccessibleContext().setAccessibleName("mainBtnDelUser");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveBtnActionPerformed
        try (FileOutputStream fileOut = new FileOutputStream("EntireSystem.ser"); ObjectOutputStream out = new ObjectOutputStream(fileOut)) {
            out.writeObject(uniController);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.printf("Serialized data is saved in EntireSystem.ser");
    }//GEN-LAST:event_menuSaveBtnActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed


    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new UniversitySetup(uniController).setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened


    }//GEN-LAST:event_formWindowOpened

    private void universityListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_universityListMouseClicked
        try {

            Integer index = this.universityList.getSelectedIndex();

            updatePersonRegister(index);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Either no Universites loaded or you have not selected one from the list.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_universityListMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (uniController.size() > 0) {
            Integer index = this.universityList.getSelectedIndex();
            new SystemOverview(this.uniController.get(index)).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "There are no universties to select, Create one via the create option panel!", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        updateUniList();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        if (uniController.size() > 0) {
            int selectedIndex = universityList.getSelectedIndex();

            listModel.clear();
            personModel.clear();
            uniController.remove(selectedIndex);

            updateUniList();
        } else {
            JOptionPane.showMessageDialog(null, "There are no universites to delete", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void addUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserBtnActionPerformed
        try {
            new RegisterSetup(this.uniController.get(this.universityList.getSelectedIndex())).setVisible(true);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Please select a university first.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addUserBtnActionPerformed

    private void userListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userListMouseClicked

        try {
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Please Select a user.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_userListMouseClicked

    private void getCredsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getCredsActionPerformed
        try {
            int index1 = userList.getSelectedIndex();

            Person selectedPerson = uniController.get(universityList.getSelectedIndex()).getSystemRegister().getRegister().get(index1);
            new Credentails(selectedPerson).setVisible(true);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Please Select a user / university.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_getCredsActionPerformed

    private void deleteUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserBtnActionPerformed
        try {
            int index0 = universityList.getSelectedIndex();
            int index1 = userList.getSelectedIndex();

            uniController.get(index0).getSystemRegister().getRegister().remove(index1);
            PersonRegister local = this.uniController.get(index0).getSystemRegister();

            personModel.clear();

            for (int x = 0; x < local.getRegister().size(); x++) {
                personModel.addElement(local.getRegister().get(x).getName());
            }
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Please Select a user / university.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_deleteUserBtnActionPerformed

    private void menuLoadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLoadBtnActionPerformed

        try (FileInputStream fileIn = new FileInputStream("EntireSystem.ser"); ObjectInputStream in = new ObjectInputStream(fileIn)) {
            uniController = (List<Controller>) in.readObject();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }

        updateUniList();

    }//GEN-LAST:event_menuLoadBtnActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained

    }//GEN-LAST:event_formFocusGained

    private void universityListComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_universityListComponentAdded

    }//GEN-LAST:event_universityListComponentAdded

    private void universityListComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_universityListComponentRemoved

    }//GEN-LAST:event_universityListComponentRemoved

    private void universityListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_universityListValueChanged

    }//GEN-LAST:event_universityListValueChanged

    private void menuCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCloseBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_menuCloseBtnActionPerformed

    private void loadUniversityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadUniversityActionPerformed
        try {

            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
            chooser.showDialog(new JFrame(""), null);
            File file = chooser.getSelectedFile();
            try (FileInputStream fileIn = new FileInputStream(file.getPath()); ObjectInputStream in = new ObjectInputStream(fileIn)) {
                uniController.add((Controller) in.readObject());
            }
        } catch (FileNotFoundException | ClassNotFoundException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, ex.getMessage(), ex);
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, ex.getMessage(), ex);
        }

        updateUniList();
    }//GEN-LAST:event_loadUniversityActionPerformed

    /**
     * gets and updates the currently associated register for the selected controller.
     * @param index index selected.
     */
    private void updatePersonRegister(int index) {

        PersonRegister local = this.uniController.get(index).getSystemRegister();

        personModel.clear();

        for (int x = 0; x < local.getRegister().size(); x++) {
            personModel.addElement(local.getRegister().get(x).getName());
        }
    }

    /**
     * updates the list current list of universities.
     */
    public void updateUniList() {
        listModel.clear();
        uniController.stream().forEach((u) -> {
            listModel.addElement(u.getUniversities().getUniversityName());
        });

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainMenu().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton deleteUserBtn;
    private javax.swing.JButton getCreds;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane listContainer;
    private javax.swing.JMenuItem loadUniversity;
    private javax.swing.JMenuItem menuCloseBtn;
    private javax.swing.JMenuItem menuLoadBtn;
    private javax.swing.JMenuItem menuSaveBtn;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JList universityList;
    private javax.swing.JList userList;
    // End of variables declaration//GEN-END:variables
}
